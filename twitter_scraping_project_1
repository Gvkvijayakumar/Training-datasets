{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Gvkvijayakumar/Training-datasets/blob/main/twitter_scraping_project_1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i22VkOh-9Qh1",
        "outputId": "b6cb7b44-a2df-4802-e9df-36d41dd374d9"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: snscrape in /usr/local/lib/python3.9/dist-packages (0.6.1.20230314)\n",
            "Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.9/dist-packages (from snscrape) (4.11.2)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from snscrape) (3.10.0)\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.9/dist-packages (from snscrape) (4.9.2)\n",
            "Requirement already satisfied: requests[socks] in /usr/local/lib/python3.9/dist-packages (from snscrape) (2.27.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.9/dist-packages (from beautifulsoup4->snscrape) (2.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests[socks]->snscrape) (2022.12.7)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests[socks]->snscrape) (1.26.15)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests[socks]->snscrape) (3.4)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests[socks]->snscrape) (2.0.12)\n",
            "Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.9/dist-packages (from requests[socks]->snscrape) (1.7.1)\n"
          ]
        }
      ],
      "source": [
        "!pip install snscrape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "loIuWazl9tqi",
        "outputId": "d89b0e65-a993-4799-b0bb-7d32ce2d5b37"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: streamlit in /usr/local/lib/python3.9/dist-packages (1.20.0)\n",
            "Requirement already satisfied: packaging>=14.1 in /usr/local/lib/python3.9/dist-packages (from streamlit) (23.0)\n",
            "Requirement already satisfied: pympler>=0.9 in /usr/local/lib/python3.9/dist-packages (from streamlit) (1.0.1)\n",
            "Requirement already satisfied: requests>=2.4 in /usr/local/lib/python3.9/dist-packages (from streamlit) (2.27.1)\n",
            "Requirement already satisfied: cachetools>=4.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (5.3.0)\n",
            "Requirement already satisfied: tzlocal>=1.1 in /usr/local/lib/python3.9/dist-packages (from streamlit) (4.2)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (from streamlit) (1.22.4)\n",
            "Requirement already satisfied: pandas<2,>=0.25 in /usr/local/lib/python3.9/dist-packages (from streamlit) (1.4.4)\n",
            "Requirement already satisfied: toml in /usr/local/lib/python3.9/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: importlib-metadata>=1.4 in /usr/local/lib/python3.9/dist-packages (from streamlit) (6.0.0)\n",
            "Requirement already satisfied: pydeck>=0.1.dev5 in /usr/local/lib/python3.9/dist-packages (from streamlit) (0.8.0)\n",
            "Requirement already satisfied: validators>=0.2 in /usr/local/lib/python3.9/dist-packages (from streamlit) (0.20.0)\n",
            "Requirement already satisfied: watchdog in /usr/local/lib/python3.9/dist-packages (from streamlit) (2.3.1)\n",
            "Requirement already satisfied: tornado>=6.0.3 in /usr/local/lib/python3.9/dist-packages (from streamlit) (6.2)\n",
            "Requirement already satisfied: protobuf<4,>=3.12 in /usr/local/lib/python3.9/dist-packages (from streamlit) (3.19.6)\n",
            "Requirement already satisfied: semver in /usr/local/lib/python3.9/dist-packages (from streamlit) (2.13.0)\n",
            "Requirement already satisfied: pyarrow>=4.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (9.0.0)\n",
            "Requirement already satisfied: blinker>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (1.5)\n",
            "Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (13.3.2)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (8.4.0)\n",
            "Requirement already satisfied: altair<5,>=3.2.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (4.2.2)\n",
            "Requirement already satisfied: typing-extensions>=3.10.0.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (4.5.0)\n",
            "Requirement already satisfied: click>=7.0 in /usr/local/lib/python3.9/dist-packages (from streamlit) (8.1.3)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.9/dist-packages (from streamlit) (2.8.2)\n",
            "Requirement already satisfied: gitpython!=3.1.19 in /usr/local/lib/python3.9/dist-packages (from streamlit) (3.1.31)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.9/dist-packages (from altair<5,>=3.2.0->streamlit) (4.3.3)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.9/dist-packages (from altair<5,>=3.2.0->streamlit) (0.4)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.9/dist-packages (from altair<5,>=3.2.0->streamlit) (0.12.0)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.9/dist-packages (from altair<5,>=3.2.0->streamlit) (3.1.2)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.9/dist-packages (from gitpython!=3.1.19->streamlit) (4.0.10)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.9/dist-packages (from importlib-metadata>=1.4->streamlit) (3.15.0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas<2,>=0.25->streamlit) (2022.7.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil->streamlit) (1.15.0)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests>=2.4->streamlit) (2.0.12)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests>=2.4->streamlit) (2022.12.7)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests>=2.4->streamlit) (1.26.15)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests>=2.4->streamlit) (3.4)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.9/dist-packages (from rich>=10.11.0->streamlit) (2.14.0)\n",
            "Requirement already satisfied: markdown-it-py<3.0.0,>=2.2.0 in /usr/local/lib/python3.9/dist-packages (from rich>=10.11.0->streamlit) (2.2.0)\n",
            "Requirement already satisfied: pytz-deprecation-shim in /usr/local/lib/python3.9/dist-packages (from tzlocal>=1.1->streamlit) (0.1.0.post0)\n",
            "Requirement already satisfied: decorator>=3.4.0 in /usr/local/lib/python3.9/dist-packages (from validators>=0.2->streamlit) (4.4.2)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.9/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19->streamlit) (5.0.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.9/dist-packages (from jinja2->altair<5,>=3.2.0->streamlit) (2.1.2)\n",
            "Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.9/dist-packages (from jsonschema>=3.0->altair<5,>=3.2.0->streamlit) (22.2.0)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.9/dist-packages (from jsonschema>=3.0->altair<5,>=3.2.0->streamlit) (0.19.3)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.9/dist-packages (from markdown-it-py<3.0.0,>=2.2.0->rich>=10.11.0->streamlit) (0.1.2)\n",
            "Requirement already satisfied: tzdata in /usr/local/lib/python3.9/dist-packages (from pytz-deprecation-shim->tzlocal>=1.1->streamlit) (2022.7)\n"
          ]
        }
      ],
      "source": [
        "!pip install streamlit"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lZtrtuZQ906X",
        "outputId": "83aeb197-8c28-4264-b0f7-afd195249c01"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: pymongo in /usr/local/lib/python3.9/dist-packages (4.3.3)\n",
            "Requirement already satisfied: dnspython<3.0.0,>=1.16.0 in /usr/local/lib/python3.9/dist-packages (from pymongo) (2.3.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install pymongo"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PlHcq6mj_TNY",
        "outputId": "76abe418-4af0-4aa2-bb81-8adf6994c9d4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\u001b[K\u001b[?25h\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35msaveError\u001b[0m ENOENT: no such file or directory, open '/content/package.json'\n",
            "\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m \u001b[0m\u001b[35menoent\u001b[0m ENOENT: no such file or directory, open '/content/package.json'\n",
            "\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No description\n",
            "\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No repository field.\n",
            "\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No README data\n",
            "\u001b[0m\u001b[37;40mnpm\u001b[0m \u001b[0m\u001b[30;43mWARN\u001b[0m\u001b[35m\u001b[0m content No license field.\n",
            "\u001b[0m\n",
            "\u001b[K\u001b[?25h+ localtunnel@2.0.2\n",
            "updated 1 package and audited 36 packages in 1.127s\n",
            "\n",
            "3 packages are looking for funding\n",
            "  run `npm fund` for details\n",
            "\n",
            "found \u001b[92m0\u001b[0m vulnerabilities\n",
            "\n",
            "\u001b[K\u001b[?25h"
          ]
        }
      ],
      "source": [
        "!npm install localtunnel"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "N8cxVFyb_g_A"
      },
      "outputs": [],
      "source": [
        "!streamlit run /content/streamlitapp.py &>/content/logs.txt&"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CtyL2HLQAJTI",
        "outputId": "bc849c89-94d1-45e0-88de-3423302c993a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[K\u001b[?25hnpx: installed 22 in 4.484s\n",
            "your url is: https://swift-coats-raise-34-91-250-117.loca.lt\n",
            "^C\n"
          ]
        }
      ],
      "source": [
        "!npx localtunnel --port 8501"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oHoG6FqdoWv4",
        "outputId": "e569e787-5d68-4763-ad23-0721f838b782"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Overwriting streamlitapp.py\n"
          ]
        }
      ],
      "source": [
        "%%writefile streamlitapp.py\n",
        "import streamlit as st\n",
        "import pandas as pd\n",
        "from datetime import date\n",
        "import pymongo\n",
        "import json\n",
        "import snscrape.modules.twitter as sntwitter\n",
        "from PIL import Image\n",
        "st.title(\"Twitter Scraping\")\n",
        "today=str(date.today())\n",
        "def Scrapingdata(Hashtag,start_date,End_date,tweets_count):\n",
        "      tweets_list=[]\n",
        "      for i,tweet in enumerate(sntwitter.TwitterSearchScraper(f'{Hashtag} since:{start_date} until:{End_date}').get_items()):\n",
        "           if i>=tweets_count:\n",
        "               break\n",
        "           tweets_list.append([tweet.date, tweet.id, tweet.content, tweet.user.username, tweet.url, tweet.retweetCount, tweet.source, tweet.likeCount,tweet.replyCount,tweet.lang])\n",
        "      return(tweets_list)\n",
        "menu=[\"Home\",\"About\",\"Search\",\"Display\",\"Download\"]\n",
        "choice=st.sidebar.selectbox(\"menu\",menu)\n",
        "if choice==\"Home\": \n",
        "    st.markdown(\"_This app is a Twitter Scraping web app created using streamlit. It scrapes the twitter data for the given hashtag/keyword for the given period. The tweets are uploaded in Mongodb and can be download as csv or json file._\")\n",
        "    img=Image.open(\"/content/elonmusk twitter.jpg\")\n",
        "    st.image(img)\n",
        "elif choice==\"About\":\n",
        "    with st.expander(\"Twitter Scraping\"):\n",
        "        st.write(\"Twitter Scraper will scrap the data from Public Twitter Profiles.It will collect the data about***date,id,url,tweet content,reply count,retweet,count,language,like count,followers and lot more information***t to gather the real facts about the Tweets\")\n",
        "    with st.expander(\"Snscrape\"):\n",
        "        st.write(\"Snscrape is a scraper for social media services like ** twitter, facebook, instagram** and so on. It scrapes **user profiles, hashtages, other tweet information** and returns the discovered items\")\n",
        "    with st.expander(\"Mongodb\"):\n",
        "        st.write(\"mongodb is an open source document database used for storing unstructured data. It is used by developers to work easily with real time data analysis,content management and lot of other web applications\")\n",
        "    with st.expander(\"Streamlit\"):\n",
        "        st.write(\"Streamlit is a awesome opensource framwork used for building highly interactive sharable web applications in python language. Its easy to share machine learning and datascience web apps using streamlit. It allows the app to load the large set of dates from web for manipulation and performing expensive computations.\")\n",
        "elif choice==\"Search\":\n",
        "    Hashtag=st.text_input(\"Enter Hashtag or Keyword\")\n",
        "    start_date=st.date_input(\"Enter starting date:(YYYY-MM-DD)\")\n",
        "    End_date=st.date_input(\"Enter end date:(YYYY-MM-DD)\")\n",
        "    tweets_count=st.number_input(\"Enter Tweet count\",min_value=1,max_value=1500,step=2)\n",
        "    if Hashtag:\n",
        "        submit=st.checkbox(\"***Scraped TWeet***\")\n",
        "        if submit:\n",
        "\n",
        "             data=Scrapingdata(Hashtag,start_date,End_date,tweets_count)\n",
        "             st.success(\"Data scraped successfully\")\n",
        "             def data_frame(data):\n",
        "                    return pd.DataFrame(data,columns=['Datetime', 'Tweet Id', 'Text', 'Username',\"url\",\"retweetCount\",\"source\",\"like_count\",\"replycount\",\"lan\"])\n",
        "             df=data_frame(data)\n",
        "             client = pymongo.MongoClient(\"mongodb+srv://vijayakumarG:vijay12345@cluster0.mzuhccl.mongodb.net/?retryWrites=true&w=majority\")\n",
        "             db = client.Twitter\n",
        "             records=db.scrapping\n",
        "             scr_data={\"Scraped_word\":Hashtag,\"Scraped_date\":today,\"Scraped_data\":df.to_dict(\"list\")}\n",
        "             records.delete_many({})\n",
        "             records.insert_one(scr_data)\n",
        "             st.success(\"upload to mongodb Successful\")\n",
        "             \n",
        "\n",
        "    else:\n",
        "         st.checkbox(\"scrapedtweet\",disabled=True)\n",
        "elif choice==\"Display\":\n",
        "    Hashtag=st.sidebar.text_input(\"Enter Hashtag or Keyword\")\n",
        "    start_date=st.sidebar.date_input(\"Enter starting date:(YYYY-MM-DD)\")\n",
        "    End_date=st.sidebar.date_input(\"Enter end date:(YYYY-MM-DD)\")\n",
        "    tweets_count=st.sidebar.number_input(\"Enter Tweet count\",min_value=1,max_value=1500,step=2)\n",
        "    list_tweet=Scrapingdata(Hashtag,start_date,End_date,tweets_count)\n",
        "    def data_frame(data):\n",
        "         return(pd.DataFrame(data,columns=['Datetime', 'Tweet Id', 'Text', 'Username',\"url\",\"retweetCount\",\"source\",\"like_count\",\"replycount\",\"lan\"]))\n",
        "    df=data_frame(list_tweet)\n",
        "    submit=st.checkbox(\"View Dataframe\") \n",
        "    if submit:\n",
        "          st.success(\"Dataframe\")\n",
        "          st.write(df) \n",
        "elif choice==\"Download\":\n",
        "    Hashtag=st.sidebar.text_input(\"Enter Hashtag or Keyword\")\n",
        "    start_date=st.sidebar.date_input(\"Enter starting date:(YYYY-MM-DD)\")\n",
        "    End_date=st.sidebar.date_input(\"Enter end date:(YYYY-MM-DD)\")\n",
        "    tweets_count=st.sidebar.number_input(\"Enter Tweet count\",min_value=1,max_value=1500,step=2)\n",
        "    tweetlist=Scrapingdata(Hashtag,start_date,End_date,tweets_count)\n",
        "    def data_frame(data):\n",
        "         return(pd.DataFrame(data,columns=['Datetime', 'Tweet Id', 'Text', 'Username',\"url\",\"retweetCount\",\"source\",\"like_count\",\"replycount\",\"lan\"]))\n",
        "    \n",
        "    def convert_csv(df_input_csv):\n",
        "          return df_input_csv.to_csv().encode(\"utf-8\")\n",
        "\n",
        "    def convert_json(j):\n",
        "          return j.to_json(orient=\"index\")\n",
        "\n",
        "    df=data_frame(tweetlist)\n",
        "    csv=convert_csv(df)\n",
        "    json = convert_json(df)\n",
        "    st.download_button(label=\"Download csv\",data=csv,file_name=\"file.csv\",mime=\"text/csv\") \n",
        "    st.download_button(label=\"Download json\",data=json,file_name=\"file.json\",mime=\"text/csv\")"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMSYsL+VyAVDDkBCmypGvHO",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}